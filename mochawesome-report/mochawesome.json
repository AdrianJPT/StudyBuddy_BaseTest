{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2024-10-07T08:29:13.484Z",
    "end": "2024-10-07T08:29:34.215Z",
    "duration": 20731,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4a45fac8-0a2f-40f4-833a-c24b0297d400",
      "title": "",
      "fullFile": "/home/adrian/job/projects/StudyBuddy/test/passwordResetTest.js",
      "file": "/test/passwordResetTest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dc4b55f7-327b-4316-bae0-5541af10731c",
          "title": "Password Reset Feature",
          "fullFile": "/home/adrian/job/projects/StudyBuddy/test/passwordResetTest.js",
          "file": "/test/passwordResetTest.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Password Reset Feature\"",
              "fullTitle": "Password Reset Feature \"before all\" hook in \"Password Reset Feature\"",
              "timedOut": false,
              "duration": 1775,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Context\ndriver = await new Builder()\n    .forBrowser('chrome')\n    .build();",
              "err": {},
              "uuid": "f5b026f9-e533-490f-b2fd-c50d69585c9c",
              "parentUUID": "dc4b55f7-327b-4316-bae0-5541af10731c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Password Reset Feature\"",
              "fullTitle": "Password Reset Feature \"after all\" hook in \"Password Reset Feature\"",
              "timedOut": false,
              "duration": 417,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Close the browser\nif (driver) {\n    this.timeout(2000)\n    await driver.quit();\n}",
              "err": {},
              "uuid": "448c0771-57e1-40ff-8181-e0861c4cac07",
              "parentUUID": "dc4b55f7-327b-4316-bae0-5541af10731c",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Password Reset Feature\"",
              "fullTitle": "Password Reset Feature \"after each\" hook in \"Password Reset Feature\"",
              "timedOut": false,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await captureScreenshotOnFailure(driver, this);",
              "err": {},
              "uuid": "377e0aa1-1223-4db3-8f43-116e05d74a76",
              "parentUUID": "dc4b55f7-327b-4316-bae0-5541af10731c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "When user try to reset if password with a registed email, should be sent a password reset link to the user email",
              "fullTitle": "Password Reset Feature When user try to reset if password with a registed email, should be sent a password reset link to the user email",
              "timedOut": false,
              "duration": 18509,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  \"Following comes the failed test image\",\n  \"screenshots/When user try to reset if password with a registed email, should be sent a password reset link to the user email.jpeg\"\n]",
              "code": "// context\ndriver.get('https://studybuddy.gg/login');\n// Act\nconst loginPage = new LoginPage(driver);\nawait loginPage.ClickForgotPassword();\nconst resetPasswordPage = new ResetPasswordPage(driver);\nawait resetPasswordPage.InputEmail('adrianpablotamayo@gmail.com');\nawait resetPasswordPage.ClickSendEmail();\n// Assert\nawait resetPasswordPage.CheckCodeGenerated();",
              "err": {
                "message": "TimeoutError: Waiting for element to be located By(xpath, //span[text()='Code Generated'])\nWait timed out after 5219ms",
                "estack": "TimeoutError: Waiting for element to be located By(xpath, //span[text()='Code Generated'])\nWait timed out after 5219ms\n    at /home/adrian/job/projects/StudyBuddy/node_modules/selenium-webdriver/lib/webdriver.js:923:22\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "967a2179-6854-4539-871b-680c84c8828e",
              "parentUUID": "dc4b55f7-327b-4316-bae0-5541af10731c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "967a2179-6854-4539-871b-680c84c8828e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 18509,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}